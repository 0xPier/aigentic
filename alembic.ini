# A generic, single database configuration.

[alembic]
# Path to folder containing migration scripts
script_location = alembic

# Template used to generate migration files
file_template = %%(year)d%%(month).2d%%(day).2d_%%(hour).2d%%(minute).2d%%(second).2d_%%(slug)s

# Timezone to use when rendering the date
# within the migration file as well as the filename.
# If specified, requires the python-dateutil library
# that is installed by default with Alembic.
timezone = UTC

# Max length of characters to apply to the
# "slug" field
truncate_slug_length = 40

# Set to 'true' to run the environment during
# the 'revision' command, regardless of autogenerate
# revision_environment = false

# Set to 'true' to allow .pyc and .pyo files without
# a source .py file to be detected as "stale"
# sourceless = false

# version path specification; This defaults
# to alembic/versions.  When using multiple version
# directories, initial revisions must be specified with --version-path
# version_locations = %(here)s/bar %(here)s/bat alembic/versions

# the output encoding used when revision files
# are written from script.py.mako
# output_encoding = utf-8

# Databases
sqlalchemy.url = postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}

[post_write_hooks]
# post_write_hooks defines scripts or Python functions that are run
# on newly generated revision scripts.  See the documentation for further
# detail and examples

# format using "black" - use the console_scripts runner, against the "black" entrypoint
# hooks=black
# black.type=console_scripts
# black.entrypoint=black
# black.options=-l79

# lint with flake8
# hooks=flake8
# flake8.type=console_scripts
# flake8.entrypoint=flake8
# flake8.options=--max-line-length=79

# format using "black" and lint with flake8
# hooks=black,flake8
# black.type=console_scripts
# black.entrypoint=black
# black.options=-l79
# flake8.type=console_scripts
# flake8.entrypoint=flake8
# flake8.options=--max-line-length=79

# validate files with mypy
# hooks=mypy
# mypy.type=console_scripts
# mypy.entrypoint=mypy
# mypy.options=--strict --ignore-missing-imports

[loggers]
keys = root,sqlalchemy,alembic

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = console
qualname =

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine

[logger_alembic]
level = INFO
handlers =
qualname = alembic

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S
